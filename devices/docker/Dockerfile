FROM ubuntu:18.04
SHELL ["/bin/bash", "-c"]

ARG MODEL_STORAGE_CONNECTION_STRING
ARG SNPE_SDK
ARG SNPE_SDK_FILENAME
ARG SNPE_ROOT
ARG ANDROID_NDK
ARG ANDROID_NDK_FILENAME
ARG ANDROID_NDK_ROOT

RUN apt-get update && apt-get install -y build-essential libtool autoconf cmake unzip wget git unzip curl python3 python3-dev python3-distutils python3-pip ffmpeg libsm6 libxext6 wget locales libjpeg-dev zlib1g zlib1g-dev libprotobuf-dev protobuf-compiler

# need cmake 3.22 to build latest version of onnx-simplifier on Ubuntu 18
# RUN apt update && \
#     apt install -y software-properties-common lsb-release && \
#     apt clean all
# RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
# RUN apt-add-repository "deb https://apt.kitware.com/ubuntu/ $(lsb_release -cs) main"
# RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 6AF7F09730B3F0A4
# RUN apt update && apt install -y cmake

# build latest version of protobuf needed by onnx
RUN git clone https://github.com/protocolbuffers/protobuf.git
RUN cd protobuf && \
    git checkout v3.16.0 && \
    git submodule update --init --recursive && \
    mkdir build_source && cd build_source && \
    cmake ../cmake -Dprotobuf_BUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_SYSCONFDIR=/etc -DCMAKE_POSITION_INDEPENDENT_CODE=ON -Dprotobuf_BUILD_TESTS=OFF -DCMAKE_BUILD_TYPE=Release && \
    make -j$(nproc) && \
    make install

RUN apt update && pip3 install --upgrade pip

# have to ensure default locale is utf-8 otherwise python bails with this error:
# UnicodeEncodeError: 'ascii' codec can't encode character '\xe7' in position 17: ordinal not in range(128)
RUN locale-gen en_US.UTF-8

WORKDIR /home/archai

RUN echo "export MODEL_STORAGE_CONNECTION_STRING=\"$MODEL_STORAGE_CONNECTION_STRING\"" >> /home/archai/.profile
RUN echo "export SNPE_ROOT=$SNPE_ROOT" >> /home/archai/.profile
RUN echo "export ANDROID_NDK_ROOT=$ANDROID_NDK_ROOT" >> /home/archai/.profile
RUN echo "export INPUT_DATASET=/home/archai/datasets/FaceSynthetics" >> /home/archai/.profile
RUN echo "export PATH=$PATH:/home/archai" >> /home/archai/.profile
RUN echo "export LC_ALL=en_US.UTF-8" >> /home/archai/.profile

RUN curl -O --location "${SNPE_SDK}"
RUN unzip "${SNPE_SDK_FILENAME}"
RUN curl -O --location "${ANDROID_NDK}"
RUN unzip "${ANDROID_NDK_FILENAME}"

RUN wget -O azcopy_v10.tar.gz https://aka.ms/downloadazcopy-v10-linux && tar -xf azcopy_v10.tar.gz --strip-components=1

# this echo is a trick to bypass docker build cache.
# simply change the echo string every time you want docker build to pull down new bits.
RUN echo '07/26/2022 04:36 PM' >/dev/null && git clone "https://github.com/microsoft/archai.git"

RUN source /home/archai/.profile && \
    pushd /home/archai/archai/devices && \
    python3 --version && \
    pip3 install -r requirements.txt

COPY run.sh /home/archai/run.sh
RUN ls -al /home/archai
RUN cat run.sh

RUN chmod u+x /home/archai/run.sh

CMD ["bash", "-c", "/home/archai/run.sh"]
